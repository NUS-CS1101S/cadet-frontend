name: Deploy cadet-frontend
on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Ref to deploy"
        required: true
      env:
        description: "Environment to deploy to"
        required: true

jobs:
  deploy:
    name: Deploy cadet-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Verify env
        run: |
          case "$INPUT_ENV" in
            prod | stg) exit 0;;
            *) echo "Invalid env: $INPUT_ENV"; exit 1;;
          esac
        env:
          INPUT_ENV: ${{ github.event.inputs.env }}

      - name: Checkout frontend
        uses: actions/checkout@master
        with:
          ref: ${{ github.event.inputs.ref }}
          path: src

      - name: Checkout deployment configuration
        uses: actions/checkout@master
        with:
          repository: "NUS-CS1101S/deployment"
          ref: master
          persist-credentials: false
          ssh-key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
          path: deployment

      - name: Setup Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: "14"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ github.event.inputs.env }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.event.inputs.env }}-yarn-

      - uses: actions/cache@v2
        id: build-cache
        with:
          path: src/node_modules/.cache
          key: 1-${{ runner.os }}-${{ github.event.inputs.env }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            1-${{ runner.os }}-${{ github.event.inputs.env }}-build-

      - name: Install dependencies
        working-directory: src
        run: JOBS=$(nproc) yarn install --frozen-lockfile

      - name: Build
        working-directory: src
        run: $GITHUB_WORKSPACE/deployment/cadet-frontend/build-frontend.sh ${{ github.event.inputs.env }}

      - name: Deploy
        working-directory: src/build
        run: $GITHUB_WORKSPACE/deployment/cadet-frontend/deploy-frontend.sh ${{ github.event.inputs.env }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1
